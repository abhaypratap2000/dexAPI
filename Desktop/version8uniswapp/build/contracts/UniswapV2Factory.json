{
  "contractName": "UniswapV2Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "PAIR_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/UniswapV2Factory.sol\":\"UniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/UniswapV2ERC20.sol\":{\"keccak256\":\"0x530c24d53d040c3e8407180283be8a245ab6bc54c099587c14623bf9f3d87ce8\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://17f2ef009e2fa5ba18468a36e5eca5ec5af08e9c113f6e9e4f7bfd6abdc069bb\",\"dweb:/ipfs/QmPZi6q1t6b2zAKSKP4yGD6abGR7HE5MftMVSSYM3Haqqt\"]},\"project:/contracts/UniswapV2Factory.sol\":{\"keccak256\":\"0xfe54b4c13a8845164a31126ba766adf127f64d28113467a473433cfa4132deea\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c39ae71411de078d03c6d5873b2198bfcad726e923cd1efa2468bf9178167e30\",\"dweb:/ipfs/QmdGyW8apAf6nYMF6fz1cy5Xx3dBKPgp7kCCUfryhfNgA9\"]},\"project:/contracts/UniswapV2Pair.sol\":{\"keccak256\":\"0xabe7b2745203d4d376f00bb659de086f5a17c6cbf89eb6188e6fa91d3920ab97\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b3d81ff3fefe662c77f7d46a3042736b3c042576448a6864f7e4802b97368e32\",\"dweb:/ipfs/QmShWik7ep6PcT3Sou37v8q7b2yKa4bT3opQxWujgkt9Uh\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x59733e527d251071259e230464f85fc4f3a21f3ac2f288419c6a5c905cb0979d\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b1e9808e7ace6d682ac85ab4d5b9ad3b8cc0143f01abbd640daa77df1e67dc1a\",\"dweb:/ipfs/QmSRK8FN3SQZviZSaBc4kuRAcfXNwZuqbNZ6LBKqDejQ9y\"]},\"project:/contracts/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0xa1c4da5c165b6775a00a2ddf736abf279a70188eebed1e37292b965f02ecd710\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://99c1f86d61fc8823451deb25b32cc17592515b46b6756db1dd32a35f700b86ab\",\"dweb:/ipfs/QmZHuk8V5TeRah9DHgRwkbC5M8Fo72bNg41WA4RxkjHsWA\"]},\"project:/contracts/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x3c56af8a4d5a5ef53ff46f099b15a6be1f5371ca1d542de15efbfaeead7a3e61\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://00950f37a6e4af53eb97b0c480ffa88010d64ad8380f5cba7f11a99f976c97b9\",\"dweb:/ipfs/QmYjhNW6VdNB2JbCsTEx6khaFgb41pfAgaa8ARirr4vqLr\"]},\"project:/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x4a40b31680201753b81b0926c2f0187b632d47965f0c7216abdc33218df170c1\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a3fa1a6c3451e64a856460da6b3c963141a97b81a20188ff44dfbbff289d9cc4\",\"dweb:/ipfs/QmdHsssnpbbXunQfp8yaayuuexXDvz1c9rfa1SHMz39CXD\"]},\"project:/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0xe9b8d91c08b8425457c587898215b14fff37b7a5bb7fc0aac67c79b235437dac\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://5574d9184ae154f94477a744cfb99175384d4cc73b7f864228ef6587e3611ff8\",\"dweb:/ipfs/QmQkNzdCFuMdHwh8HC8bcNqqynbnhd6nQvddWfuN4LHhtC\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0xe9944e0e7f0d6b0c0bc869cf633a8e430da9b5bbe093b5dab7dbe4a3e0f08494\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b027bd6692a9b77eca78d5105e4dfc6c0b8bb5844e798088e06e87a59109a408\",\"dweb:/ipfs/QmUkxZW9wMrEtnKgB2W2VeV9LUoTG4cZN49PqtHP1KTqMk\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x8eb210328ddf007a69a28bc213d98c14d8a00a45a77a0d4d42474a5df9b6b619\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://a0af027a330ecbe0e3c4d321de742caa625f2f9ad4066ba14d2c73129c905a66\",\"dweb:/ipfs/QmS9XQ1QuqkrBBJPu3iE62QRjbZ8HPgJ41dprJLdHN9k1i\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161289338038061289383398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b612800806100936000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806364f91c721161006657806364f91c7214610100578063a2e74af614610108578063c9c653961461011d578063e6a4390514610130578063f46901ed1461016457600080fd5b8063017e7e5814610098578063094b7415146100c85780631e3dd18b146100db578063574f2ba3146100ee575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100ab906001600160a01b031681565b6100ab6100e93660046105b9565b610177565b6003545b6040519081526020016100bf565b6100f26101a1565b61011b6101163660046105ee565b6101ce565b005b6100ab61012b366004610610565b610246565b6100ab61013e366004610610565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61011b6101723660046105ee565b610539565b6003818154811061018757600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516101b0602082016105ac565b6020820181038252601f19601f820116604052508051906020012081565b6001546001600160a01b031633146102245760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316036102a95760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f4144445245535345530000604482015260640161021b565b600080836001600160a01b0316856001600160a01b0316106102cc5783856102cf565b84845b90925090506001600160a01b03821661032a5760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f41444452455353000000000000000000604482015260640161021b565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103985760405162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b604482015260640161021b565b6040516bffffffffffffffffffffffff19606084811b8216602084015283901b166034820152604801604051602081830303815290604052805190602001206040516103e3906105ac565b8190604051809103906000f5905080158015610403573d6000803e3d6000fd5b5060405163485cc95560e01b81526001600160a01b03848116600483015283811660248301529194509084169063485cc95590604401600060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050506001600160a01b0382811660008181526002602081815260408084208787168086529083528185208054978b166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a3505092915050565b6001546001600160a01b0316331461058a5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015260640161021b565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6121878061064483390190565b6000602082840312156105cb57600080fd5b5035919050565b80356001600160a01b03811681146105e957600080fd5b919050565b60006020828403121561060057600080fd5b610609826105d2565b9392505050565b6000806040838503121561062357600080fd5b61062c836105d2565b915061063a602084016105d2565b9050925092905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f198184030181529190528051602090910120600355600580546001600160a01b031916331790556120798061010e6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610408578063d505accf1461041b578063dd62ed3e1461042e578063fff6cae91461045957600080fd5b8063ba9a7a56146103d9578063bc25cf77146103e2578063c45a0155146103f557600080fd5b80637ecebe00116100d35780637ecebe001461035957806389afcb441461037957806395d89b41146103a1578063a9059cbb146103c657600080fd5b80636a6278421461031d57806370a08231146103305780637464fc3d1461035057600080fd5b806323b872dd116101665780633644e515116101405780633644e515146102ef578063485cc955146102f85780635909c0d51461030b5780635a3d54931461031457600080fd5b806323b872dd1461029b57806330adf81f146102ae578063313ce567146102d557600080fd5b8063022c0d9f146101ae57806306fdde03146101c35780630902f1ac14610202578063095ea7b3146102365780630dfe16811461025957806318160ddd14610284575b600080fd5b6101c16101bc366004611c2f565b610461565b005b6101ec6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516101f99190611ce9565b60405180910390f35b61020a61097b565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101f9565b610249610244366004611d1c565b6109a5565b60405190151581526020016101f9565b60065461026c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f9565b61028d60005481565b6040519081526020016101f9565b6102496102a9366004611d48565b6109bc565b61028d7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102dd601281565b60405160ff90911681526020016101f9565b61028d60035481565b6101c1610306366004611d89565b610a36565b61028d60095481565b61028d600a5481565b61028d61032b366004611dc2565b610ab5565b61028d61033e366004611dc2565b60016020526000908152604090205481565b61028d600b5481565b61028d610367366004611dc2565b60046020526000908152604090205481565b61038c610387366004611dc2565b610d83565b604080519283526020830191909152016101f9565b6101ec604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6102496103d4366004611d1c565b6110e8565b61028d6103e881565b6101c16103f0366004611dc2565b6110f5565b60055461026c906001600160a01b031681565b60075461026c906001600160a01b031681565b6101c1610429366004611ddf565b611208565b61028d61043c366004611d89565b600260209081526000928352604080842090915290825290205481565b6101c161141c565b600c5460011461048c5760405162461bcd60e51b815260040161048390611e56565b60405180910390fd5b6000600c558415158061049f5750600084115b6104f95760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b6064820152608401610483565b60008061050461097b565b5091509150816001600160701b0316871080156105295750806001600160701b031686105b61057f5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b6064820152608401610483565b60065460075460009182916001600160a01b039182169190811690891682148015906105bd5750806001600160a01b0316896001600160a01b031614155b6106015760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b6044820152606401610483565b8a1561061257610612828a8d611540565b891561062357610623818a8c611540565b8615610690576040516304347a1760e21b81526001600160a01b038a16906310d1e85c9061065d9033908f908f908e908e90600401611e81565b600060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f89190611ecd565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190611ecd565b92505050600089856001600160701b031661077e9190611efc565b831161078b5760006107a8565b61079e8a6001600160701b038716611efc565b6107a89084611efc565b905060006107bf8a6001600160701b038716611efc565b83116107cc5760006107e9565b6107df8a6001600160701b038716611efc565b6107e99084611efc565b905060008211806107fa5750600081115b6108525760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b6064820152608401610483565b600061085f836003611f0f565b61086b866103e8611f0f565b6108759190611efc565b90506000610884836003611f0f565b610890866103e8611f0f565b61089a9190611efc565b90506108b26001600160701b03808916908a16611f0f565b6108bf90620f4240611f0f565b6108c98284611f0f565b10156109065760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b6044820152606401610483565b50506109148484888861165b565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109b2338484611813565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610a21576001600160a01b038416600090815260026020908152604080832033845290915281208054849290610a1b908490611efc565b90915550505b610a2c848484611875565b5060019392505050565b6005546001600160a01b03163314610a875760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b6044820152606401610483565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610ad95760405162461bcd60e51b815260040161048390611e56565b6000600c81905580610ae961097b565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190611ecd565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd19190611ecd565b90506000610be86001600160701b03861684611efc565b90506000610bff6001600160701b03861684611efc565b90506000610c0d8787611916565b60008054919250819003610c4e576103e8610c30610c2b8587611f0f565b611a55565b610c3a9190611efc565b9850610c4960006103e8611ac5565b610c95565b610c926001600160701b038916610c658387611f0f565b610c6f9190611f3c565b6001600160701b038916610c838487611f0f565b610c8d9190611f3c565b611b4e565b98505b60008911610cf65760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b6064820152608401610483565b610d008a8a611ac5565b610d0c86868a8a61165b565b8115610d3557600854610d31906001600160701b03600160701b820481169116611f0f565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610da85760405162461bcd60e51b815260040161048390611e56565b6000600c81905580610db861097b565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e369190611ecd565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea49190611ecd565b30600090815260016020526040812054919250610ec18888611916565b60005490915080610ed28685611f0f565b610edc9190611f3c565b9a5080610ee98585611f0f565b610ef39190611f3c565b995060008b118015610f05575060008a115b610f625760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b6064820152608401610483565b610f6c3084611b66565b610f77878d8d611540565b610f82868d8c611540565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015610fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fea9190611ecd565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa158015611031573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110559190611ecd565b935061106385858b8b61165b565b811561108c57600854611088906001600160701b03600160701b820481169116611f0f565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109b2338484611875565b600c546001146111175760405162461bcd60e51b815260040161048390611e56565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916111b691849186916001600160701b03169083906370a08231906024015b602060405180830381865afa158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a79190611ecd565b6111b19190611efc565b611540565b6008546040516370a0823160e01b81523060048201526111fe9183918691600160701b90046001600160701b0316906001600160a01b038416906370a0823190602401611166565b50506001600c5550565b4284101561124d5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606401610483565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876112a083611f50565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161131992919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611384573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906113ba5750886001600160a01b0316816001600160a01b0316145b6114065760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152606401610483565b611411898989611813565b505050505050505050565b600c5460011461143e5760405162461bcd60e51b815260040161048390611e56565b6000600c556006546040516370a0823160e01b8152306004820152611539916001600160a01b0316906370a0823190602401602060405180830381865afa15801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b19190611ecd565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151d9190611ecd565b6008546001600160701b0380821691600160701b90041661165b565b6001600c55565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161159c9190611f69565b6000604051808303816000865af19150503d80600081146115d9576040519150601f19603f3d011682016040523d82523d6000602084013e6115de565b606091505b50915091508180156116085750805115806116085750808060200190518101906116089190611f85565b6116545760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c45440000000000006044820152606401610483565b5050505050565b6001600160701b03841180159061167957506001600160701b038311155b6116bb5760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b6044820152606401610483565b60006116cc64010000000042611fa7565b60085490915063ffffffff600160e01b90910481168203908116158015906116fc57506001600160701b03841615155b801561171057506001600160701b03831615155b1561177b578063ffffffff166117388561172986611be9565b6001600160e01b031690611c02565b600980546001600160e01b03929092169290920201905563ffffffff81166117638461172987611be9565b600a80546001600160e01b0392909216929092020190555b506008805463ffffffff8316600160e01b026001600160e01b036001600160701b03888116600160701b9081026001600160e01b03199095168b83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a15050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260408120805483929061189d908490611efc565b90915550506001600160a01b038216600090815260016020526040812080548392906118ca908490611fbb565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161186891815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa15801561196c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119909190611fce565b600b546001600160a01b038216158015945091925090611a41578015611a3c5760006119cb610c2b6001600160701b03808816908916611f0f565b905060006119d883611a55565b905080821115611a395760006119ee8284611efc565b6000546119fb9190611f0f565b9050600082611a0b856005611f0f565b611a159190611fbb565b90506000611a238284611f3c565b90508015611a3557611a358782611ac5565b5050505b50505b611a4d565b8015611a4d576000600b555b505092915050565b60006003821115611ab65750806000611a6f600283611f3c565b611a7a906001611fbb565b90505b81811015611ab057905080600281611a958186611f3c565b611a9f9190611fbb565b611aa99190611f3c565b9050611a7d565b50919050565b8115611ac0575060015b919050565b80600080828254611ad69190611fbb565b90915550506001600160a01b03821660009081526001602052604081208054839290611b03908490611fbb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6000818310611b5d5781611b5f565b825b9392505050565b6001600160a01b03821660009081526001602052604081208054839290611b8e908490611efc565b9250508190555080600080828254611ba69190611efc565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611b42565b60006109b6600160701b6001600160701b038416611feb565b6000611b5f6001600160701b0383168461201d565b6001600160a01b0381168114611c2c57600080fd5b50565b600080600080600060808688031215611c4757600080fd5b85359450602086013593506040860135611c6081611c17565b9250606086013567ffffffffffffffff80821115611c7d57600080fd5b818801915088601f830112611c9157600080fd5b813581811115611ca057600080fd5b896020828501011115611cb257600080fd5b9699959850939650602001949392505050565b60005b83811015611ce0578181015183820152602001611cc8565b50506000910152565b6020815260008251806020840152611d08816040850160208701611cc5565b601f01601f19169190910160400192915050565b60008060408385031215611d2f57600080fd5b8235611d3a81611c17565b946020939093013593505050565b600080600060608486031215611d5d57600080fd5b8335611d6881611c17565b92506020840135611d7881611c17565b929592945050506040919091013590565b60008060408385031215611d9c57600080fd5b8235611da781611c17565b91506020830135611db781611c17565b809150509250929050565b600060208284031215611dd457600080fd5b8135611b5f81611c17565b600080600080600080600060e0888a031215611dfa57600080fd5b8735611e0581611c17565b96506020880135611e1581611c17565b95506040880135945060608801359350608088013560ff81168114611e3957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215611edf57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109b6576109b6611ee6565b80820281158282048414176109b6576109b6611ee6565b634e487b7160e01b600052601260045260246000fd5b600082611f4b57611f4b611f26565b500490565b600060018201611f6257611f62611ee6565b5060010190565b60008251611f7b818460208701611cc5565b9190910192915050565b600060208284031215611f9757600080fd5b81518015158114611b5f57600080fd5b600082611fb657611fb6611f26565b500690565b808201808211156109b6576109b6611ee6565b600060208284031215611fe057600080fd5b8151611b5f81611c17565b6001600160e01b0382811682821681810283169291811582850482141761201457612014611ee6565b50505092915050565b60006001600160e01b038381168061203757612037611f26565b9216919091049291505056fea2646970667358221220adfc37d20e2c64be1b7db706a85d10e2c352d3ec532512f02586be24160ec14864736f6c63430008130033a26469706673582212205e530f369cbe88d6352d1849d61f9bba05ba5526174aad15abdb0344cd49118564736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c806364f91c721161006657806364f91c7214610100578063a2e74af614610108578063c9c653961461011d578063e6a4390514610130578063f46901ed1461016457600080fd5b8063017e7e5814610098578063094b7415146100c85780631e3dd18b146100db578063574f2ba3146100ee575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100ab906001600160a01b031681565b6100ab6100e93660046105b9565b610177565b6003545b6040519081526020016100bf565b6100f26101a1565b61011b6101163660046105ee565b6101ce565b005b6100ab61012b366004610610565b610246565b6100ab61013e366004610610565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61011b6101723660046105ee565b610539565b6003818154811061018757600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516101b0602082016105ac565b6020820181038252601f19601f820116604052508051906020012081565b6001546001600160a01b031633146102245760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b0316036102a95760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f4144445245535345530000604482015260640161021b565b600080836001600160a01b0316856001600160a01b0316106102cc5783856102cf565b84845b90925090506001600160a01b03821661032a5760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f41444452455353000000000000000000604482015260640161021b565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103985760405162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b604482015260640161021b565b6040516bffffffffffffffffffffffff19606084811b8216602084015283901b166034820152604801604051602081830303815290604052805190602001206040516103e3906105ac565b8190604051809103906000f5905080158015610403573d6000803e3d6000fd5b5060405163485cc95560e01b81526001600160a01b03848116600483015283811660248301529194509084169063485cc95590604401600060405180830381600087803b15801561045357600080fd5b505af1158015610467573d6000803e3d6000fd5b505050506001600160a01b0382811660008181526002602081815260408084208787168086529083528185208054978b166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a3505092915050565b6001546001600160a01b0316331461058a5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b604482015260640161021b565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6121878061064483390190565b6000602082840312156105cb57600080fd5b5035919050565b80356001600160a01b03811681146105e957600080fd5b919050565b60006020828403121561060057600080fd5b610609826105d2565b9392505050565b6000806040838503121561062357600080fd5b61062c836105d2565b915061063a602084016105d2565b9050925092905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f918101919091527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f198184030181529190528051602090910120600355600580546001600160a01b031916331790556120798061010e6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610408578063d505accf1461041b578063dd62ed3e1461042e578063fff6cae91461045957600080fd5b8063ba9a7a56146103d9578063bc25cf77146103e2578063c45a0155146103f557600080fd5b80637ecebe00116100d35780637ecebe001461035957806389afcb441461037957806395d89b41146103a1578063a9059cbb146103c657600080fd5b80636a6278421461031d57806370a08231146103305780637464fc3d1461035057600080fd5b806323b872dd116101665780633644e515116101405780633644e515146102ef578063485cc955146102f85780635909c0d51461030b5780635a3d54931461031457600080fd5b806323b872dd1461029b57806330adf81f146102ae578063313ce567146102d557600080fd5b8063022c0d9f146101ae57806306fdde03146101c35780630902f1ac14610202578063095ea7b3146102365780630dfe16811461025957806318160ddd14610284575b600080fd5b6101c16101bc366004611c2f565b610461565b005b6101ec6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516101f99190611ce9565b60405180910390f35b61020a61097b565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101f9565b610249610244366004611d1c565b6109a5565b60405190151581526020016101f9565b60065461026c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f9565b61028d60005481565b6040519081526020016101f9565b6102496102a9366004611d48565b6109bc565b61028d7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102dd601281565b60405160ff90911681526020016101f9565b61028d60035481565b6101c1610306366004611d89565b610a36565b61028d60095481565b61028d600a5481565b61028d61032b366004611dc2565b610ab5565b61028d61033e366004611dc2565b60016020526000908152604090205481565b61028d600b5481565b61028d610367366004611dc2565b60046020526000908152604090205481565b61038c610387366004611dc2565b610d83565b604080519283526020830191909152016101f9565b6101ec604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6102496103d4366004611d1c565b6110e8565b61028d6103e881565b6101c16103f0366004611dc2565b6110f5565b60055461026c906001600160a01b031681565b60075461026c906001600160a01b031681565b6101c1610429366004611ddf565b611208565b61028d61043c366004611d89565b600260209081526000928352604080842090915290825290205481565b6101c161141c565b600c5460011461048c5760405162461bcd60e51b815260040161048390611e56565b60405180910390fd5b6000600c558415158061049f5750600084115b6104f95760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b6064820152608401610483565b60008061050461097b565b5091509150816001600160701b0316871080156105295750806001600160701b031686105b61057f5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b6064820152608401610483565b60065460075460009182916001600160a01b039182169190811690891682148015906105bd5750806001600160a01b0316896001600160a01b031614155b6106015760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b6044820152606401610483565b8a1561061257610612828a8d611540565b891561062357610623818a8c611540565b8615610690576040516304347a1760e21b81526001600160a01b038a16906310d1e85c9061065d9033908f908f908e908e90600401611e81565b600060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa1580156106d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f89190611ecd565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a0823190602401602060405180830381865afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190611ecd565b92505050600089856001600160701b031661077e9190611efc565b831161078b5760006107a8565b61079e8a6001600160701b038716611efc565b6107a89084611efc565b905060006107bf8a6001600160701b038716611efc565b83116107cc5760006107e9565b6107df8a6001600160701b038716611efc565b6107e99084611efc565b905060008211806107fa5750600081115b6108525760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b6064820152608401610483565b600061085f836003611f0f565b61086b866103e8611f0f565b6108759190611efc565b90506000610884836003611f0f565b610890866103e8611f0f565b61089a9190611efc565b90506108b26001600160701b03808916908a16611f0f565b6108bf90620f4240611f0f565b6108c98284611f0f565b10156109065760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b6044820152606401610483565b50506109148484888861165b565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109b2338484611813565b5060015b92915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610a21576001600160a01b038416600090815260026020908152604080832033845290915281208054849290610a1b908490611efc565b90915550505b610a2c848484611875565b5060019392505050565b6005546001600160a01b03163314610a875760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b6044820152606401610483565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610ad95760405162461bcd60e51b815260040161048390611e56565b6000600c81905580610ae961097b565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610b3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b5f9190611ecd565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610bad573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd19190611ecd565b90506000610be86001600160701b03861684611efc565b90506000610bff6001600160701b03861684611efc565b90506000610c0d8787611916565b60008054919250819003610c4e576103e8610c30610c2b8587611f0f565b611a55565b610c3a9190611efc565b9850610c4960006103e8611ac5565b610c95565b610c926001600160701b038916610c658387611f0f565b610c6f9190611f3c565b6001600160701b038916610c838487611f0f565b610c8d9190611f3c565b611b4e565b98505b60008911610cf65760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b6064820152608401610483565b610d008a8a611ac5565b610d0c86868a8a61165b565b8115610d3557600854610d31906001600160701b03600160701b820481169116611f0f565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610da85760405162461bcd60e51b815260040161048390611e56565b6000600c81905580610db861097b565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a0823190602401602060405180830381865afa158015610e12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e369190611ecd565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a0823190602401602060405180830381865afa158015610e80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ea49190611ecd565b30600090815260016020526040812054919250610ec18888611916565b60005490915080610ed28685611f0f565b610edc9190611f3c565b9a5080610ee98585611f0f565b610ef39190611f3c565b995060008b118015610f05575060008a115b610f625760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b6064820152608401610483565b610f6c3084611b66565b610f77878d8d611540565b610f82868d8c611540565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a0823190602401602060405180830381865afa158015610fc6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fea9190611ecd565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a0823190602401602060405180830381865afa158015611031573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110559190611ecd565b935061106385858b8b61165b565b811561108c57600854611088906001600160701b03600160701b820481169116611f0f565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109b2338484611875565b600c546001146111175760405162461bcd60e51b815260040161048390611e56565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916111b691849186916001600160701b03169083906370a08231906024015b602060405180830381865afa158015611183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a79190611ecd565b6111b19190611efc565b611540565b6008546040516370a0823160e01b81523060048201526111fe9183918691600160701b90046001600160701b0316906001600160a01b038416906370a0823190602401611166565b50506001600c5550565b4284101561124d5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606401610483565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876112a083611f50565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161131992919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611384573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906113ba5750886001600160a01b0316816001600160a01b0316145b6114065760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152606401610483565b611411898989611813565b505050505050505050565b600c5460011461143e5760405162461bcd60e51b815260040161048390611e56565b6000600c556006546040516370a0823160e01b8152306004820152611539916001600160a01b0316906370a0823190602401602060405180830381865afa15801561148d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114b19190611ecd565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156114f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151d9190611ecd565b6008546001600160701b0380821691600160701b90041661165b565b6001600c55565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b179052915160009283929087169161159c9190611f69565b6000604051808303816000865af19150503d80600081146115d9576040519150601f19603f3d011682016040523d82523d6000602084013e6115de565b606091505b50915091508180156116085750805115806116085750808060200190518101906116089190611f85565b6116545760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c45440000000000006044820152606401610483565b5050505050565b6001600160701b03841180159061167957506001600160701b038311155b6116bb5760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b6044820152606401610483565b60006116cc64010000000042611fa7565b60085490915063ffffffff600160e01b90910481168203908116158015906116fc57506001600160701b03841615155b801561171057506001600160701b03831615155b1561177b578063ffffffff166117388561172986611be9565b6001600160e01b031690611c02565b600980546001600160e01b03929092169290920201905563ffffffff81166117638461172987611be9565b600a80546001600160e01b0392909216929092020190555b506008805463ffffffff8316600160e01b026001600160e01b036001600160701b03888116600160701b9081026001600160e01b03199095168b83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a15050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260408120805483929061189d908490611efc565b90915550506001600160a01b038216600090815260016020526040812080548392906118ca908490611fbb565b92505081905550816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161186891815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b8152600401602060405180830381865afa15801561196c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119909190611fce565b600b546001600160a01b038216158015945091925090611a41578015611a3c5760006119cb610c2b6001600160701b03808816908916611f0f565b905060006119d883611a55565b905080821115611a395760006119ee8284611efc565b6000546119fb9190611f0f565b9050600082611a0b856005611f0f565b611a159190611fbb565b90506000611a238284611f3c565b90508015611a3557611a358782611ac5565b5050505b50505b611a4d565b8015611a4d576000600b555b505092915050565b60006003821115611ab65750806000611a6f600283611f3c565b611a7a906001611fbb565b90505b81811015611ab057905080600281611a958186611f3c565b611a9f9190611fbb565b611aa99190611f3c565b9050611a7d565b50919050565b8115611ac0575060015b919050565b80600080828254611ad69190611fbb565b90915550506001600160a01b03821660009081526001602052604081208054839290611b03908490611fbb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b6000818310611b5d5781611b5f565b825b9392505050565b6001600160a01b03821660009081526001602052604081208054839290611b8e908490611efc565b9250508190555080600080828254611ba69190611efc565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611b42565b60006109b6600160701b6001600160701b038416611feb565b6000611b5f6001600160701b0383168461201d565b6001600160a01b0381168114611c2c57600080fd5b50565b600080600080600060808688031215611c4757600080fd5b85359450602086013593506040860135611c6081611c17565b9250606086013567ffffffffffffffff80821115611c7d57600080fd5b818801915088601f830112611c9157600080fd5b813581811115611ca057600080fd5b896020828501011115611cb257600080fd5b9699959850939650602001949392505050565b60005b83811015611ce0578181015183820152602001611cc8565b50506000910152565b6020815260008251806020840152611d08816040850160208701611cc5565b601f01601f19169190910160400192915050565b60008060408385031215611d2f57600080fd5b8235611d3a81611c17565b946020939093013593505050565b600080600060608486031215611d5d57600080fd5b8335611d6881611c17565b92506020840135611d7881611c17565b929592945050506040919091013590565b60008060408385031215611d9c57600080fd5b8235611da781611c17565b91506020830135611db781611c17565b809150509250929050565b600060208284031215611dd457600080fd5b8135611b5f81611c17565b600080600080600080600060e0888a031215611dfa57600080fd5b8735611e0581611c17565b96506020880135611e1581611c17565b95506040880135945060608801359350608088013560ff81168114611e3957600080fd5b9699959850939692959460a0840135945060c09093013592915050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b600060208284031215611edf57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b818103818111156109b6576109b6611ee6565b80820281158282048414176109b6576109b6611ee6565b634e487b7160e01b600052601260045260246000fd5b600082611f4b57611f4b611f26565b500490565b600060018201611f6257611f62611ee6565b5060010190565b60008251611f7b818460208701611cc5565b9190910192915050565b600060208284031215611f9757600080fd5b81518015158114611b5f57600080fd5b600082611fb657611fb6611f26565b500690565b808201808211156109b6576109b6611ee6565b600060208284031215611fe057600080fd5b8151611b5f81611c17565b6001600160e01b0382811682821681810283169291811582850482141761201457612014611ee6565b50505092915050565b60006001600160e01b038381168061203757612037611f26565b9216919091049291505056fea2646970667358221220adfc37d20e2c64be1b7db706a85d10e2c352d3ec532512f02586be24160ec14864736f6c63430008130033a26469706673582212205e530f369cbe88d6352d1849d61f9bba05ba5526174aad15abdb0344cd49118564736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:52",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:52",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:52"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:52"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:52"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:52"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:52",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:52",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:52"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:52"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:52"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:52"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:52"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:52"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:52",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:52",
                "type": ""
              }
            ],
            "src": "14:290:52"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 52,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3739:52",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:52",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:52"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:52",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:52"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:52",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:52",
                "type": ""
              }
            ],
            "src": "14:203:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:110:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "313:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "309:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "305:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "302:52:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "363:33:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "386:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "373:12:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:23:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "363:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "258:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "269:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "281:6:52",
                "type": ""
              }
            ],
            "src": "222:180:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:76:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "530:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "541:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "526:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "518:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "560:9:52"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "571:6:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "553:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:25:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "553:25:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "477:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "488:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "499:4:52",
                "type": ""
              }
            ],
            "src": "407:177:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "690:76:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "700:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "712:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "723:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "708:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "708:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "700:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "742:9:52"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "753:6:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "735:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "735:25:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "735:25:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "659:9:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "670:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "681:4:52",
                "type": ""
              }
            ],
            "src": "589:177:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "820:124:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "830:29:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "852:6:52"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "839:12:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "839:20:52"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "830:5:52"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "922:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "931:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "934:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "924:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "924:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "924:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "881:5:52"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "892:5:52"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "907:3:52",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "912:1:52",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "903:3:52"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "903:11:52"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "916:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "899:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "899:19:52"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "888:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "888:31:52"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "878:2:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "878:42:52"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "871:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:50:52"
                  },
                  "nodeType": "YulIf",
                  "src": "868:70:52"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "799:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "810:5:52",
                "type": ""
              }
            ],
            "src": "771:173:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1019:116:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1065:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1074:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1077:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1067:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1067:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1067:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1040:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1049:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1036:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1036:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1061:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1032:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1032:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "1029:52:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1090:39:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1119:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1100:18:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:29:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1090:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "985:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "996:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1008:6:52",
                "type": ""
              }
            ],
            "src": "949:186:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1227:173:52",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1273:16:52",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1282:1:52",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1285:1:52",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1275:6:52"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1275:12:52"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1275:12:52"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1248:7:52"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1257:9:52"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1244:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1244:23:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1269:2:52",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1240:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1240:32:52"
                  },
                  "nodeType": "YulIf",
                  "src": "1237:52:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1298:39:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1327:9:52"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1308:18:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1308:29:52"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1298:6:52"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1346:48:52",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1379:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1390:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1375:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1375:18:52"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1356:18:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1356:38:52"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1346:6:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1185:9:52",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1196:7:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1208:6:52",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1216:6:52",
                "type": ""
              }
            ],
            "src": "1140:260:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1579:170:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1596:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1607:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1589:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1589:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1589:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1630:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1641:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1626:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1626:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1646:2:52",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1619:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1619:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1619:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1669:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1680:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1665:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1665:18:52"
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1685:22:52",
                        "type": "",
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1658:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1658:50:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1658:50:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1717:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1729:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1740:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1725:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1725:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1717:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1556:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1570:4:52",
                "type": ""
              }
            ],
            "src": "1405:344:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1928:180:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1945:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1956:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1938:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1938:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1938:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1979:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1990:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1975:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1975:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1995:2:52",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1968:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1968:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1968:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2018:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2029:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2014:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2014:18:52"
                      },
                      {
                        "hexValue": "556e697377617056323a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2034:32:52",
                        "type": "",
                        "value": "UniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2007:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2007:60:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2007:60:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2076:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2088:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2099:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2084:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2084:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2076:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1905:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1919:4:52",
                "type": ""
              }
            ],
            "src": "1754:354:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2287:173:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2304:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2315:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2297:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2297:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2297:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2338:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2349:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2334:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2334:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2354:2:52",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2327:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2327:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2327:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2377:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2388:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2373:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2373:18:52"
                      },
                      {
                        "hexValue": "556e697377617056323a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2393:25:52",
                        "type": "",
                        "value": "UniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2366:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2366:53:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2366:53:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2428:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2440:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2451:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2436:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2428:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2264:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2278:4:52",
                "type": ""
              }
            ],
            "src": "2113:347:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2639:172:52",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2656:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2667:2:52",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2649:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2649:21:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2649:21:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2690:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2701:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2686:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2686:18:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2706:2:52",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2679:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:30:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2679:30:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2729:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2740:2:52",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2725:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2725:18:52"
                      },
                      {
                        "hexValue": "556e697377617056323a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2745:24:52",
                        "type": "",
                        "value": "UniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2718:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2718:52:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2718:52:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2779:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2791:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2802:2:52",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2787:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2787:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2779:4:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2616:9:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2630:4:52",
                "type": ""
              }
            ],
            "src": "2465:346:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2963:186:52",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2973:41:52",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2987:26:52",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2983:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2983:31:52"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2977:2:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3030:3:52"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3043:2:52",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3047:6:52"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3039:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3039:15:52"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3056:2:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3035:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3035:24:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3023:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:37:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3023:37:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "3080:3:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3085:2:52",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3076:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3076:12:52"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3098:2:52",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "3102:6:52"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "3094:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3094:15:52"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3111:2:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3090:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3090:24:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3069:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3069:46:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3069:46:52"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3124:19:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3135:3:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3140:2:52",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3131:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3131:12:52"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "3124:3:52"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2931:3:52",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2936:6:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2944:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2955:3:52",
                "type": ""
              }
            ],
            "src": "2816:333:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3283:175:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3293:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3305:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3316:2:52",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3301:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3301:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3293:4:52"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3328:29:52",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3346:3:52",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3351:1:52",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3342:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3342:11:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3355:1:52",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3338:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3338:19:52"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3332:2:52",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3373:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3388:6:52"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3396:2:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3384:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3384:15:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3366:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3366:34:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3366:34:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3420:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3431:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3416:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3416:18:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3440:6:52"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3448:2:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3436:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3436:15:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3409:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3409:43:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3409:43:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3244:9:52",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3255:6:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3263:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3274:4:52",
                "type": ""
              }
            ],
            "src": "3154:304:52"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3592:145:52",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3602:26:52",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3614:9:52"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3625:2:52",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3610:3:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3610:18:52"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3602:4:52"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3644:9:52"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3659:6:52"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3675:3:52",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3680:1:52",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3671:3:52"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3671:11:52"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3684:1:52",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3667:3:52"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3667:19:52"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3655:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3655:32:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3637:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3637:51:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3637:51:52"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3708:9:52"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3719:2:52",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3704:3:52"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3704:18:52"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3724:6:52"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3697:6:52"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3697:34:52"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3697:34:52"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3553:9:52",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3564:6:52",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3572:6:52",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3583:4:52",
                "type": ""
              }
            ],
            "src": "3463:274:52"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"UniswapV2: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"UniswapV2: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UniswapV2: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"UniswapV2: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 52,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "148:1827:1:-:0;;;490:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;534:11;:26;;-1:-1:-1;;;;;;534:26:1;-1:-1:-1;;;;;534:26:1;;;;;;;;;;148:1827;;14:290:52;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:52;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:52:o;:::-;148:1827:1;;;;;;",
  "deployedSourceMap": "148:1827:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;295:29;;;;;-1:-1:-1;;;;;295:29:1;;;;;;-1:-1:-1;;;;;178:32:52;;;160:51;;148:2;133:18;295:29:1;;;;;;;;330:35;;;;;-1:-1:-1;;;;;330:35:1;;;449:34;;;;;;:::i;:::-;;:::i;573:106::-;657:8;:15;573:106;;;553:25:52;;;541:2;526:18;573:106:1;407:177:52;201:87:1;;;:::i;1798:175::-;;;;;;:::i;:::-;;:::i;:::-;;685:950;;;;;;:::i;:::-;;:::i;372:71::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;372:71:1;;;1641:151;;;;;;:::i;:::-;;:::i;449:34::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;449:34:1;;-1:-1:-1;449:34:1;:::o;201:87::-;255:32;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;245:43;;;;;;201:87;:::o;1798:175::-;1894:11;;-1:-1:-1;;;;;1894:11:1;1880:10;:25;1872:58;;;;-1:-1:-1;;;1872:58:1;;1607:2:52;1872:58:1;;;1589:21:52;1646:2;1626:18;;;1619:30;-1:-1:-1;;;1665:18:52;;;1658:50;1725:18;;1872:58:1;;;;;;;;;1940:11;:26;;-1:-1:-1;;;;;;1940:26:1;-1:-1:-1;;;;;1940:26:1;;;;;;;;;;1798:175::o;685:950::-;786:12;828:6;-1:-1:-1;;;;;818:16:1;:6;-1:-1:-1;;;;;818:16:1;;810:59;;;;-1:-1:-1;;;810:59:1;;1956:2:52;810:59:1;;;1938:21:52;1995:2;1975:18;;;1968:30;2034:32;2014:18;;;2007:60;2084:18;;810:59:1;1754:354:52;810:59:1;880:14;896;923:6;-1:-1:-1;;;;;914:15:1;:6;-1:-1:-1;;;;;914:15:1;;:77;;976:6;984;914:77;;;945:6;953;914:77;879:112;;-1:-1:-1;879:112:1;-1:-1:-1;;;;;;1009:20:1;;1001:56;;;;-1:-1:-1;;;1001:56:1;;2315:2:52;1001:56:1;;;2297:21:52;2354:2;2334:18;;;2327:30;2393:25;2373:18;;;2366:53;2436:18;;1001:56:1;2113:347:52;1001:56:1;-1:-1:-1;;;;;1088:15:1;;;1123:1;1088:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;1067:106;;;;-1:-1:-1;;;1067:106:1;;2667:2:52;1067:106:1;;;2649:21:52;2706:2;2686:18;;;2679:30;-1:-1:-1;;;2725:18:52;;;2718:52;2787:18;;1067:106:1;2465:346:52;1067:106:1;1293:32;;-1:-1:-1;;3043:2:52;3039:15;;;3035:24;;1293:32:1;;;3023:37:52;3094:15;;;3090:24;3076:12;;;3069:46;3131:12;;1293:32:1;;;;;;;;;;;;1283:43;;;;;;1242:100;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1362:47:1;;-1:-1:-1;;;1362:47:1;;-1:-1:-1;;;;;3384:15:52;;;1362:47:1;;;3366:34:52;3436:15;;;3416:18;;;3409:43;1214:138:1;;-1:-1:-1;1362:31:1;;;;;;3301:18:52;;1362:47:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1419:15:1;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;1419:30:1;;;;;;;;1459:15;;;;;;:23;;;;;;;;:30;;;;;;;;1544:8;:19;;-1:-1:-1;1544:19:1;;;;;;;;;;;;;;;;;;;;;;1612:15;;1578:50;;3637:51:52;;;3704:18;;;3697:34;1578:50:1;;3610:18:52;1578:50:1;;;;;;;800:835;;685:950;;;;:::o;1641:151::-;1725:11;;-1:-1:-1;;;;;1725:11:1;1711:10;:25;1703:58;;;;-1:-1:-1;;;1703:58:1;;1607:2:52;1703:58:1;;;1589:21:52;1646:2;1626:18;;;1619:30;-1:-1:-1;;;1665:18:52;;;1658:50;1725:18;;1703:58:1;1405:344:52;1703:58:1;1771:5;:14;;-1:-1:-1;;;;;;1771:14:1;-1:-1:-1;;;;;1771:14:1;;;;;;;;;;1641:151::o;-1:-1:-1:-;;;;;;;;:::o;222:180:52:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:52;;222:180;-1:-1:-1;222:180:52:o;771:173::-;839:20;;-1:-1:-1;;;;;888:31:52;;878:42;;868:70;;934:1;931;924:12;868:70;771:173;;;:::o;949:186::-;1008:6;1061:2;1049:9;1040:7;1036:23;1032:32;1029:52;;;1077:1;1074;1067:12;1029:52;1100:29;1119:9;1100:29;:::i;:::-;1090:39;949:186;-1:-1:-1;;;949:186:52:o;1140:260::-;1208:6;1216;1269:2;1257:9;1248:7;1244:23;1240:32;1237:52;;;1285:1;1282;1275:12;1237:52;1308:29;1327:9;1308:29;:::i;:::-;1298:39;;1356:38;1390:2;1379:9;1375:18;1356:38;:::i;:::-;1346:48;;1140:260;;;;;:::o",
  "source": "// SPDX-License-Identifier: GPL-3.0-or-later\n\npragma solidity >=0.8.4;\n\nimport \"./interfaces/IUniswapV2Factory.sol\";\nimport \"./UniswapV2Pair.sol\";\n\ncontract UniswapV2Factory is IUniswapV2Factory {\n    bytes32 public constant PAIR_HASH =\n        keccak256(type(UniswapV2Pair).creationCode);\n\n    address public override feeTo;\n    address public override feeToSetter;\n\n    mapping(address => mapping(address => address)) public override getPair;\n    address[] public override allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view override returns (uint256) {\n        return allPairs.length;\n    }\n\n    function createPair(\n        address tokenA,\n        address tokenB\n    ) external override returns (address pair) {\n        require(tokenA != tokenB, \"UniswapV2: IDENTICAL_ADDRESSES\");\n        (address token0, address token1) = tokenA < tokenB\n            ? (tokenA, tokenB)\n            : (tokenB, tokenA);\n        require(token0 != address(0), \"UniswapV2: ZERO_ADDRESS\");\n        require(\n            getPair[token0][token1] == address(0),\n            \"UniswapV2: PAIR_EXISTS\"\n        ); // single check is sufficient\n\n        pair = address(\n            new UniswapV2Pair{\n                salt: keccak256(abi.encodePacked(token0, token1))\n            }()\n        );\n        IUniswapV2Pair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external override {\n        require(msg.sender == feeToSetter, \"UniswapV2: FORBIDDEN\");\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external override {\n        require(msg.sender == feeToSetter, \"UniswapV2: FORBIDDEN\");\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/home/abhaypratap/Desktop/version8uniswapp/contracts/UniswapV2Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/UniswapV2Factory.sol",
    "exportedSymbols": {
      "IERC20": [
        3712
      ],
      "IUniswapV2Callee": [
        3726
      ],
      "IUniswapV2ERC20": [
        3844
      ],
      "IUniswapV2Factory": [
        3907
      ],
      "IUniswapV2Pair": [
        4037
      ],
      "Math": [
        4535
      ],
      "UQ112x112": [
        4739
      ],
      "UniswapV2ERC20": [
        347
      ],
      "UniswapV2Factory": [
        550
      ],
      "UniswapV2Pair": [
        1563
      ]
    },
    "id": 551,
    "license": "GPL-3.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 349,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "46:24:1"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IUniswapV2Factory.sol",
        "file": "./interfaces/IUniswapV2Factory.sol",
        "id": 350,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 551,
        "sourceUnit": 3908,
        "src": "72:44:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/UniswapV2Pair.sol",
        "file": "./UniswapV2Pair.sol",
        "id": 351,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 551,
        "sourceUnit": 1564,
        "src": "117:29:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 352,
              "name": "IUniswapV2Factory",
              "nameLocations": [
                "177:17:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3907,
              "src": "177:17:1"
            },
            "id": 353,
            "nodeType": "InheritanceSpecifier",
            "src": "177:17:1"
          }
        ],
        "canonicalName": "UniswapV2Factory",
        "contractDependencies": [
          1563
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 550,
        "linearizedBaseContracts": [
          550,
          3907
        ],
        "name": "UniswapV2Factory",
        "nameLocation": "157:16:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "64f91c72",
            "id": 361,
            "mutability": "constant",
            "name": "PAIR_HASH",
            "nameLocation": "225:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 550,
            "src": "201:87:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 354,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "201:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 357,
                        "name": "UniswapV2Pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1563,
                        "src": "260:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$1563_$",
                          "typeString": "type(contract UniswapV2Pair)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$1563_$",
                          "typeString": "type(contract UniswapV2Pair)"
                        }
                      ],
                      "id": 356,
                      "name": "type",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967269,
                      "src": "255:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "255:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_magic_meta_type_t_contract$_UniswapV2Pair_$1563",
                      "typeString": "type(contract UniswapV2Pair)"
                    }
                  },
                  "id": 359,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "memberLocation": "275:12:1",
                  "memberName": "creationCode",
                  "nodeType": "MemberAccess",
                  "src": "255:32:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 355,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "245:9:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 360,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "245:43:1",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3861
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 364,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "319:5:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 363,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "310:8:1"
            },
            "scope": 550,
            "src": "295:29:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 362,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "295:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3866
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 367,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "354:11:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 366,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "345:8:1"
            },
            "scope": 550,
            "src": "330:35:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 365,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "330:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3875
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 374,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "436:7:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 373,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "427:8:1"
            },
            "scope": 550,
            "src": "372:71:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 372,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 368,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "380:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "372:47:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 371,
                "keyName": "",
                "keyNameLocation": "-1:-1:-1",
                "keyType": {
                  "id": 369,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "399:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "391:27:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueName": "",
                "valueNameLocation": "-1:-1:-1",
                "valueType": {
                  "id": 370,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "410:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3882
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 378,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "475:8:1",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 377,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "466:8:1"
            },
            "scope": 550,
            "src": "449:34:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 375,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "449:7:1",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 376,
              "nodeType": "ArrayTypeName",
              "src": "449:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 387,
              "nodeType": "Block",
              "src": "524:43:1",
              "statements": [
                {
                  "expression": {
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 383,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "534:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 384,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 380,
                      "src": "548:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "534:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "534:26:1"
                }
              ]
            },
            "id": 388,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 380,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "510:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 388,
                  "src": "502:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "502:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "501:22:1"
            },
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:0:1"
            },
            "scope": 550,
            "src": "490:77:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3887
            ],
            "body": {
              "id": 397,
              "nodeType": "Block",
              "src": "640:39:1",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 394,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 378,
                      "src": "657:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "666:6:1",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "657:15:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 393,
                  "id": 396,
                  "nodeType": "Return",
                  "src": "650:22:1"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "582:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 390,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "613:8:1"
            },
            "parameters": {
              "id": 389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "596:2:1"
            },
            "returnParameters": {
              "id": 393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 392,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 398,
                  "src": "631:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "631:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "630:9:1"
            },
            "scope": 550,
            "src": "573:106:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3896
            ],
            "body": {
              "id": 510,
              "nodeType": "Block",
              "src": "800:835:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 409,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "818:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 410,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "828:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "818:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a204944454e544943414c5f414444524553534553",
                        "id": 412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "836:32:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        },
                        "value": "UniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "810:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "810:59:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 414,
                  "nodeType": "ExpressionStatement",
                  "src": "810:59:1"
                },
                {
                  "assignments": [
                    416,
                    418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 416,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "888:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 510,
                      "src": "880:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 415,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "880:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 418,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "904:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 510,
                      "src": "896:14:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 417,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "896:7:1",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 429,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 419,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 400,
                        "src": "914:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 420,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 402,
                        "src": "923:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "914:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 425,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "976:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 426,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "984:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 427,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "975:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "914:77:1",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 422,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 400,
                          "src": "945:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 423,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 402,
                          "src": "953:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 424,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "944:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "879:112:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 431,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "1009:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1027:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1019:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 432,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1019:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1019:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1009:20:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a205a45524f5f41444452455353",
                        "id": 437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1031:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        },
                        "value": "UniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 430,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1001:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1001:56:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 439,
                  "nodeType": "ExpressionStatement",
                  "src": "1001:56:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 441,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 374,
                              "src": "1088:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 443,
                            "indexExpression": {
                              "id": 442,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "1096:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1088:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 445,
                          "indexExpression": {
                            "id": 444,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "1104:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1088:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1123:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1115:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 446,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1115:7:1",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1088:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20504149525f455849535453",
                        "id": 451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1139:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                          "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                        },
                        "value": "UniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                          "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                        }
                      ],
                      "id": 440,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1067:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1067:106:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 453,
                  "nodeType": "ExpressionStatement",
                  "src": "1067:106:1"
                },
                {
                  "expression": {
                    "id": 470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 454,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "1214:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 459,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "NewExpression",
                              "src": "1242:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UniswapV2Pair_$1563_$",
                                "typeString": "function () returns (contract UniswapV2Pair)"
                              },
                              "typeName": {
                                "id": 458,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                  "id": 457,
                                  "name": "UniswapV2Pair",
                                  "nameLocations": [
                                    "1246:13:1"
                                  ],
                                  "nodeType": "IdentifierPath",
                                  "referencedDeclaration": 1563,
                                  "src": "1246:13:1"
                                },
                                "referencedDeclaration": 1563,
                                "src": "1246:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_UniswapV2Pair_$1563",
                                  "typeString": "contract UniswapV2Pair"
                                }
                              }
                            },
                            "id": 467,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "salt"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 463,
                                        "name": "token0",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 416,
                                        "src": "1310:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 464,
                                        "name": "token1",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 418,
                                        "src": "1318:6:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 461,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967295,
                                        "src": "1293:3:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 462,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1297:12:1",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1293:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1293:32:1",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 460,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967288,
                                  "src": "1283:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 466,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1283:43:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "src": "1242:98:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_UniswapV2Pair_$1563_$salt",
                              "typeString": "function () returns (contract UniswapV2Pair)"
                            }
                          },
                          "id": 468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1242:100:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1563",
                            "typeString": "contract UniswapV2Pair"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_UniswapV2Pair_$1563",
                            "typeString": "contract UniswapV2Pair"
                          }
                        ],
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1221:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 469,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1221:131:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1214:138:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 471,
                  "nodeType": "ExpressionStatement",
                  "src": "1214:138:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 476,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "1394:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 477,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1402:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 473,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 406,
                            "src": "1377:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 472,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4037,
                          "src": "1362:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$4037_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1362:20:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$4037",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1383:10:1",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 4036,
                      "src": "1362:31:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1362:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 479,
                  "nodeType": "ExpressionStatement",
                  "src": "1362:47:1"
                },
                {
                  "expression": {
                    "id": 486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 480,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 374,
                          "src": "1419:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 483,
                        "indexExpression": {
                          "id": 481,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 416,
                          "src": "1427:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1419:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 484,
                      "indexExpression": {
                        "id": 482,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1435:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1419:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 485,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "1445:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1419:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 487,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:30:1"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 488,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 374,
                          "src": "1459:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 491,
                        "indexExpression": {
                          "id": 489,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 418,
                          "src": "1467:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1459:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 492,
                      "indexExpression": {
                        "id": 490,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "1475:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1459:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 493,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 406,
                      "src": "1485:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1459:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "1459:30:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 499,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "1558:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 496,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "1544:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1553:4:1",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1544:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1544:19:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 501,
                  "nodeType": "ExpressionStatement",
                  "src": "1544:19:1"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 503,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 416,
                        "src": "1590:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 504,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 418,
                        "src": "1598:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 505,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 406,
                        "src": "1606:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 506,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 378,
                          "src": "1612:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1621:6:1",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1612:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 502,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3856,
                      "src": "1578:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1578:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 509,
                  "nodeType": "EmitStatement",
                  "src": "1573:55:1"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "694:10:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 404,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "768:8:1"
            },
            "parameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 400,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "722:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "714:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 399,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "714:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "746:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "738:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 401,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "704:54:1"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "794:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 511,
                  "src": "786:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "786:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "785:14:1"
            },
            "scope": 550,
            "src": "685:950:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3901
            ],
            "body": {
              "id": 529,
              "nodeType": "Block",
              "src": "1693:99:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 518,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1711:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1715:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1711:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 520,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "1725:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1711:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "id": 522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1738:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        },
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 517,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1703:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1703:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 524,
                  "nodeType": "ExpressionStatement",
                  "src": "1703:58:1"
                },
                {
                  "expression": {
                    "id": 527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 525,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 364,
                      "src": "1771:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 526,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 513,
                      "src": "1779:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1771:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 528,
                  "nodeType": "ExpressionStatement",
                  "src": "1771:14:1"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 530,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1650:8:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 515,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1684:8:1"
            },
            "parameters": {
              "id": 514,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 513,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1667:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 530,
                  "src": "1659:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 512,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1659:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1658:16:1"
            },
            "returnParameters": {
              "id": 516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1693:0:1"
            },
            "scope": 550,
            "src": "1641:151:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3906
            ],
            "body": {
              "id": 548,
              "nodeType": "Block",
              "src": "1862:111:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 537,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1880:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 538,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1884:6:1",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1880:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 539,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 367,
                          "src": "1894:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1880:25:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1907:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        },
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1872:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 542,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1872:58:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 543,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:58:1"
                },
                {
                  "expression": {
                    "id": 546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 544,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 367,
                      "src": "1940:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 545,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "1954:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1940:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 547,
                  "nodeType": "ExpressionStatement",
                  "src": "1940:26:1"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 549,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1807:14:1",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 534,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1853:8:1"
            },
            "parameters": {
              "id": 533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 532,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1830:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 549,
                  "src": "1822:20:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 531,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1822:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1821:22:1"
            },
            "returnParameters": {
              "id": 535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1862:0:1"
            },
            "scope": 550,
            "src": "1798:175:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 551,
        "src": "148:1827:1",
        "usedErrors": []
      }
    ],
    "src": "46:1930:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xfF5efD5288E5D53e19b29dFf8DB4FA47B89C6501",
      "transactionHash": "0x194cb6305adb372b1acf7dfbadf2bb642b0be101dcc3e225af207d1c78a8120a"
    }
  },
  "schemaVersion": "3.4.7",
  "updatedAt": "2023-03-23T10:40:23.876Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}